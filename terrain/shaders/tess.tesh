#version 410
layout(triangles, equal_spacing, ccw) in;

in vec3 tcPosition[];
in vec2 eTex[];
in float eOffset[];
out vec3 tePosition;
out vec3 tePatchDistance;
out vec2 gTex;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

float rand(vec2 co){
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

void main()
{
	vec3 p0 = gl_TessCoord.x * tcPosition[0];
	vec3 p1 = gl_TessCoord.y * tcPosition[1];
	vec3 p2 = gl_TessCoord.z * tcPosition[2];
	vec3 tePosition = p0 + p1 + p2;
	tePatchDistance = gl_TessCoord;
	//gl_Position = vec4(tePosition, 1.0);
	gTex = eTex[0];
	float r = rand(vec2(tePosition.x, tePosition.y))/60.0;
	
	gl_Position = vec4(tePosition.x+r, tePosition.y+r, tePosition.z, 1.0)*model*view*projection;
}